#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CampionatoCalcio
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CampionatoCalcio")]
	public partial class CampionatoCalcioDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void Insertallenatore(allenatore instance);
    partial void Updateallenatore(allenatore instance);
    partial void Deleteallenatore(allenatore instance);
    partial void Insertarbitro(arbitro instance);
    partial void Updatearbitro(arbitro instance);
    partial void Deletearbitro(arbitro instance);
    partial void Insertcampionato(campionato instance);
    partial void Updatecampionato(campionato instance);
    partial void Deletecampionato(campionato instance);
    partial void Insertclassifica(classifica instance);
    partial void Updateclassifica(classifica instance);
    partial void Deleteclassifica(classifica instance);
    partial void Insertclub(club instance);
    partial void Updateclub(club instance);
    partial void Deleteclub(club instance);
    partial void Insertcontratto(contratto instance);
    partial void Updatecontratto(contratto instance);
    partial void Deletecontratto(contratto instance);
    partial void Insertconvocazione(convocazione instance);
    partial void Updateconvocazione(convocazione instance);
    partial void Deleteconvocazione(convocazione instance);
    partial void Insertcoppa(coppa instance);
    partial void Updatecoppa(coppa instance);
    partial void Deletecoppa(coppa instance);
    partial void Insertgiocatore(giocatore instance);
    partial void Updategiocatore(giocatore instance);
    partial void Deletegiocatore(giocatore instance);
    partial void Insertgiornata(giornata instance);
    partial void Updategiornata(giornata instance);
    partial void Deletegiornata(giornata instance);
    partial void Insertiscrizione(iscrizione instance);
    partial void Updateiscrizione(iscrizione instance);
    partial void Deleteiscrizione(iscrizione instance);
    partial void Insertistruzione(istruzione instance);
    partial void Updateistruzione(istruzione instance);
    partial void Deleteistruzione(istruzione instance);
    partial void Insertnazionale(nazionale instance);
    partial void Updatenazionale(nazionale instance);
    partial void Deletenazionale(nazionale instance);
    partial void Insertpartita(partita instance);
    partial void Updatepartita(partita instance);
    partial void Deletepartita(partita instance);
    partial void Insertpersona(persona instance);
    partial void Updatepersona(persona instance);
    partial void Deletepersona(persona instance);
    partial void Insertpresenza(presenza instance);
    partial void Updatepresenza(presenza instance);
    partial void Deletepresenza(presenza instance);
    partial void Insertpresidente(presidente instance);
    partial void Updatepresidente(presidente instance);
    partial void Deletepresidente(presidente instance);
    partial void Insertsquadra(squadra instance);
    partial void Updatesquadra(squadra instance);
    partial void Deletesquadra(squadra instance);
    partial void Insertstadio(stadio instance);
    partial void Updatestadio(stadio instance);
    partial void Deletestadio(stadio instance);
    partial void Insertvittoria(vittoria instance);
    partial void Updatevittoria(vittoria instance);
    partial void Deletevittoria(vittoria instance);
    #endregion
		
		public CampionatoCalcioDataContext() : 
				base(global::CampionatoCalcio.Properties.Settings.Default.CampionatoCalcioConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CampionatoCalcioDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CampionatoCalcioDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CampionatoCalcioDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CampionatoCalcioDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<allenatore> allenatore
		{
			get
			{
				return this.GetTable<allenatore>();
			}
		}
		
		public System.Data.Linq.Table<arbitro> arbitro
		{
			get
			{
				return this.GetTable<arbitro>();
			}
		}
		
		public System.Data.Linq.Table<campionato> campionato
		{
			get
			{
				return this.GetTable<campionato>();
			}
		}
		
		public System.Data.Linq.Table<classifica> classifica
		{
			get
			{
				return this.GetTable<classifica>();
			}
		}
		
		public System.Data.Linq.Table<club> club
		{
			get
			{
				return this.GetTable<club>();
			}
		}
		
		public System.Data.Linq.Table<contratto> contratto
		{
			get
			{
				return this.GetTable<contratto>();
			}
		}
		
		public System.Data.Linq.Table<convocazione> convocazione
		{
			get
			{
				return this.GetTable<convocazione>();
			}
		}
		
		public System.Data.Linq.Table<coppa> coppa
		{
			get
			{
				return this.GetTable<coppa>();
			}
		}
		
		public System.Data.Linq.Table<giocatore> giocatore
		{
			get
			{
				return this.GetTable<giocatore>();
			}
		}
		
		public System.Data.Linq.Table<giornata> giornata
		{
			get
			{
				return this.GetTable<giornata>();
			}
		}
		
		public System.Data.Linq.Table<iscrizione> iscrizione
		{
			get
			{
				return this.GetTable<iscrizione>();
			}
		}
		
		public System.Data.Linq.Table<istruzione> istruzione
		{
			get
			{
				return this.GetTable<istruzione>();
			}
		}
		
		public System.Data.Linq.Table<nazionale> nazionale
		{
			get
			{
				return this.GetTable<nazionale>();
			}
		}
		
		public System.Data.Linq.Table<partita> partita
		{
			get
			{
				return this.GetTable<partita>();
			}
		}
		
		public System.Data.Linq.Table<persona> persona
		{
			get
			{
				return this.GetTable<persona>();
			}
		}
		
		public System.Data.Linq.Table<presenza> presenza
		{
			get
			{
				return this.GetTable<presenza>();
			}
		}
		
		public System.Data.Linq.Table<presidente> presidente
		{
			get
			{
				return this.GetTable<presidente>();
			}
		}
		
		public System.Data.Linq.Table<squadra> squadra
		{
			get
			{
				return this.GetTable<squadra>();
			}
		}
		
		public System.Data.Linq.Table<stadio> stadio
		{
			get
			{
				return this.GetTable<stadio>();
			}
		}
		
		public System.Data.Linq.Table<vittoria> vittoria
		{
			get
			{
				return this.GetTable<vittoria>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.allenatore")]
	public partial class allenatore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF_ALL;
		
		private string _nomeSquadra;
		
		private int _codContratto;
		
		private EntitySet<contratto> _contratto;
		
		private EntitySet<squadra> _squadra;
		
		private EntityRef<persona> _persona;
		
		private EntityRef<istruzione> _istruzione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCF_ALLChanging(string value);
    partial void OnCF_ALLChanged();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    partial void OncodContrattoChanging(int value);
    partial void OncodContrattoChanged();
    #endregion
		
		public allenatore()
		{
			this._contratto = new EntitySet<contratto>(new Action<contratto>(this.attach_contratto), new Action<contratto>(this.detach_contratto));
			this._squadra = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra), new Action<squadra>(this.detach_squadra));
			this._persona = default(EntityRef<persona>);
			this._istruzione = default(EntityRef<istruzione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_ALL", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF_ALL
		{
			get
			{
				return this._CF_ALL;
			}
			set
			{
				if ((this._CF_ALL != value))
				{
					if ((this._persona.HasLoadedOrAssignedValue || this._istruzione.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCF_ALLChanging(value);
					this.SendPropertyChanging();
					this._CF_ALL = value;
					this.SendPropertyChanged("CF_ALL");
					this.OnCF_ALLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codContratto", DbType="Int NOT NULL")]
		public int codContratto
		{
			get
			{
				return this._codContratto;
			}
			set
			{
				if ((this._codContratto != value))
				{
					this.OncodContrattoChanging(value);
					this.SendPropertyChanging();
					this._codContratto = value;
					this.SendPropertyChanged("codContratto");
					this.OncodContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="allenatore_contratto", Storage="_contratto", ThisKey="codContratto", OtherKey="codContratto")]
		public EntitySet<contratto> contratto
		{
			get
			{
				return this._contratto;
			}
			set
			{
				this._contratto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="allenatore_squadra", Storage="_squadra", ThisKey="nomeSquadra", OtherKey="nomeSquadra")]
		public EntitySet<squadra> squadra
		{
			get
			{
				return this._squadra;
			}
			set
			{
				this._squadra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_allenatore", Storage="_persona", ThisKey="CF_ALL", OtherKey="CF", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.allenatore1.Remove(this);
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.allenatore1.Add(this);
						this._CF_ALL = value.CF;
					}
					else
					{
						this._CF_ALL = default(string);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="istruzione_allenatore", Storage="_istruzione", ThisKey="CF_ALL", OtherKey="CF_ALL", IsForeignKey=true)]
		public istruzione istruzione
		{
			get
			{
				return this._istruzione.Entity;
			}
			set
			{
				istruzione previousValue = this._istruzione.Entity;
				if (((previousValue != value) 
							|| (this._istruzione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._istruzione.Entity = null;
						previousValue.allenatore.Remove(this);
					}
					this._istruzione.Entity = value;
					if ((value != null))
					{
						value.allenatore.Add(this);
						this._CF_ALL = value.CF_ALL;
					}
					else
					{
						this._CF_ALL = default(string);
					}
					this.SendPropertyChanged("istruzione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contratto(contratto entity)
		{
			this.SendPropertyChanging();
			entity.allenatore = this;
		}
		
		private void detach_contratto(contratto entity)
		{
			this.SendPropertyChanging();
			entity.allenatore = null;
		}
		
		private void attach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.allenatore = this;
		}
		
		private void detach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.allenatore = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.arbitro")]
	public partial class arbitro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF_ARB;
		
		private EntityRef<persona> _persona;
		
		private EntityRef<partita> _partita;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCF_ARBChanging(string value);
    partial void OnCF_ARBChanged();
    #endregion
		
		public arbitro()
		{
			this._persona = default(EntityRef<persona>);
			this._partita = default(EntityRef<partita>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_ARB", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF_ARB
		{
			get
			{
				return this._CF_ARB;
			}
			set
			{
				if ((this._CF_ARB != value))
				{
					if ((this._persona.HasLoadedOrAssignedValue || this._partita.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCF_ARBChanging(value);
					this.SendPropertyChanging();
					this._CF_ARB = value;
					this.SendPropertyChanged("CF_ARB");
					this.OnCF_ARBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_arbitro", Storage="_persona", ThisKey="CF_ARB", OtherKey="CF", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.arbitro1.Remove(this);
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.arbitro1.Add(this);
						this._CF_ARB = value.CF;
					}
					else
					{
						this._CF_ARB = default(string);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_arbitro", Storage="_partita", ThisKey="CF_ARB", OtherKey="CF_ARB", IsForeignKey=true)]
		public partita partita
		{
			get
			{
				return this._partita.Entity;
			}
			set
			{
				partita previousValue = this._partita.Entity;
				if (((previousValue != value) 
							|| (this._partita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._partita.Entity = null;
						previousValue.arbitro.Remove(this);
					}
					this._partita.Entity = value;
					if ((value != null))
					{
						value.arbitro.Add(this);
						this._CF_ARB = value.CF_ARB;
					}
					else
					{
						this._CF_ARB = default(string);
					}
					this.SendPropertyChanged("partita");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.campionato")]
	public partial class campionato : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _stagione;
		
		private string _nome;
		
		private string _luogo;
		
		private EntityRef<iscrizione> _iscrizione;
		
		private EntityRef<presenza> _presenza;
		
		private EntityRef<giornata> _giornata;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstagioneChanging(string value);
    partial void OnstagioneChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnluogoChanging(string value);
    partial void OnluogoChanged();
    #endregion
		
		public campionato()
		{
			this._iscrizione = default(EntityRef<iscrizione>);
			this._presenza = default(EntityRef<presenza>);
			this._giornata = default(EntityRef<giornata>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stagione", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string stagione
		{
			get
			{
				return this._stagione;
			}
			set
			{
				if ((this._stagione != value))
				{
					if (((this._iscrizione.HasLoadedOrAssignedValue || this._presenza.HasLoadedOrAssignedValue) 
								|| this._giornata.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstagioneChanging(value);
					this.SendPropertyChanging();
					this._stagione = value;
					this.SendPropertyChanged("stagione");
					this.OnstagioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luogo", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string luogo
		{
			get
			{
				return this._luogo;
			}
			set
			{
				if ((this._luogo != value))
				{
					this.OnluogoChanging(value);
					this.SendPropertyChanging();
					this._luogo = value;
					this.SendPropertyChanged("luogo");
					this.OnluogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iscrizione_campionato", Storage="_iscrizione", ThisKey="stagione", OtherKey="stagione", IsForeignKey=true)]
		public iscrizione iscrizione
		{
			get
			{
				return this._iscrizione.Entity;
			}
			set
			{
				iscrizione previousValue = this._iscrizione.Entity;
				if (((previousValue != value) 
							|| (this._iscrizione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iscrizione.Entity = null;
						previousValue.campionato.Remove(this);
					}
					this._iscrizione.Entity = value;
					if ((value != null))
					{
						value.campionato.Add(this);
						this._stagione = value.stagione;
					}
					else
					{
						this._stagione = default(string);
					}
					this.SendPropertyChanged("iscrizione");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="presenza_campionato", Storage="_presenza", ThisKey="stagione", OtherKey="stagione", IsForeignKey=true)]
		public presenza presenza
		{
			get
			{
				return this._presenza.Entity;
			}
			set
			{
				presenza previousValue = this._presenza.Entity;
				if (((previousValue != value) 
							|| (this._presenza.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._presenza.Entity = null;
						previousValue.campionato.Remove(this);
					}
					this._presenza.Entity = value;
					if ((value != null))
					{
						value.campionato.Add(this);
						this._stagione = value.stagione;
					}
					else
					{
						this._stagione = default(string);
					}
					this.SendPropertyChanged("presenza");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="giornata_campionato", Storage="_giornata", ThisKey="stagione", OtherKey="stagione", IsForeignKey=true)]
		public giornata giornata
		{
			get
			{
				return this._giornata.Entity;
			}
			set
			{
				giornata previousValue = this._giornata.Entity;
				if (((previousValue != value) 
							|| (this._giornata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._giornata.Entity = null;
						previousValue.campionato.Remove(this);
					}
					this._giornata.Entity = value;
					if ((value != null))
					{
						value.campionato.Add(this);
						this._stagione = value.stagione;
					}
					else
					{
						this._stagione = default(string);
					}
					this.SendPropertyChanged("giornata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.classifica")]
	public partial class classifica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _giornata;
		
		private string _nomeSquadra;
		
		private System.Nullable<int> _partiteGiocate;
		
		private System.Nullable<int> _vittorie;
		
		private System.Nullable<int> _pareggi;
		
		private System.Nullable<int> _sconfitte;
		
		private System.Nullable<int> _retiSegnate;
		
		private System.Nullable<int> _retiSubite;
		
		private System.Nullable<int> _punteggio;
		
		private EntitySet<giornata> _giornata1;
		
		private EntitySet<squadra> _squadra;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OngiornataChanging(int value);
    partial void OngiornataChanged();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    partial void OnpartiteGiocateChanging(System.Nullable<int> value);
    partial void OnpartiteGiocateChanged();
    partial void OnvittorieChanging(System.Nullable<int> value);
    partial void OnvittorieChanged();
    partial void OnpareggiChanging(System.Nullable<int> value);
    partial void OnpareggiChanged();
    partial void OnsconfitteChanging(System.Nullable<int> value);
    partial void OnsconfitteChanged();
    partial void OnretiSegnateChanging(System.Nullable<int> value);
    partial void OnretiSegnateChanged();
    partial void OnretiSubiteChanging(System.Nullable<int> value);
    partial void OnretiSubiteChanged();
    partial void OnpunteggioChanging(System.Nullable<int> value);
    partial void OnpunteggioChanged();
    #endregion
		
		public classifica()
		{
			this._giornata1 = new EntitySet<giornata>(new Action<giornata>(this.attach_giornata1), new Action<giornata>(this.detach_giornata1));
			this._squadra = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra), new Action<squadra>(this.detach_squadra));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giornata", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int giornata
		{
			get
			{
				return this._giornata;
			}
			set
			{
				if ((this._giornata != value))
				{
					this.OngiornataChanging(value);
					this.SendPropertyChanging();
					this._giornata = value;
					this.SendPropertyChanged("giornata");
					this.OngiornataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partiteGiocate", DbType="Int")]
		public System.Nullable<int> partiteGiocate
		{
			get
			{
				return this._partiteGiocate;
			}
			set
			{
				if ((this._partiteGiocate != value))
				{
					this.OnpartiteGiocateChanging(value);
					this.SendPropertyChanging();
					this._partiteGiocate = value;
					this.SendPropertyChanged("partiteGiocate");
					this.OnpartiteGiocateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vittorie", DbType="Int")]
		public System.Nullable<int> vittorie
		{
			get
			{
				return this._vittorie;
			}
			set
			{
				if ((this._vittorie != value))
				{
					this.OnvittorieChanging(value);
					this.SendPropertyChanging();
					this._vittorie = value;
					this.SendPropertyChanged("vittorie");
					this.OnvittorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pareggi", DbType="Int")]
		public System.Nullable<int> pareggi
		{
			get
			{
				return this._pareggi;
			}
			set
			{
				if ((this._pareggi != value))
				{
					this.OnpareggiChanging(value);
					this.SendPropertyChanging();
					this._pareggi = value;
					this.SendPropertyChanged("pareggi");
					this.OnpareggiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sconfitte", DbType="Int")]
		public System.Nullable<int> sconfitte
		{
			get
			{
				return this._sconfitte;
			}
			set
			{
				if ((this._sconfitte != value))
				{
					this.OnsconfitteChanging(value);
					this.SendPropertyChanging();
					this._sconfitte = value;
					this.SendPropertyChanged("sconfitte");
					this.OnsconfitteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retiSegnate", DbType="Int")]
		public System.Nullable<int> retiSegnate
		{
			get
			{
				return this._retiSegnate;
			}
			set
			{
				if ((this._retiSegnate != value))
				{
					this.OnretiSegnateChanging(value);
					this.SendPropertyChanging();
					this._retiSegnate = value;
					this.SendPropertyChanged("retiSegnate");
					this.OnretiSegnateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retiSubite", DbType="Int")]
		public System.Nullable<int> retiSubite
		{
			get
			{
				return this._retiSubite;
			}
			set
			{
				if ((this._retiSubite != value))
				{
					this.OnretiSubiteChanging(value);
					this.SendPropertyChanging();
					this._retiSubite = value;
					this.SendPropertyChanged("retiSubite");
					this.OnretiSubiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_punteggio", DbType="Int")]
		public System.Nullable<int> punteggio
		{
			get
			{
				return this._punteggio;
			}
			set
			{
				if ((this._punteggio != value))
				{
					this.OnpunteggioChanging(value);
					this.SendPropertyChanging();
					this._punteggio = value;
					this.SendPropertyChanged("punteggio");
					this.OnpunteggioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classifica_giornata", Storage="_giornata1", ThisKey="giornata", OtherKey="giornata1")]
		public EntitySet<giornata> giornata1
		{
			get
			{
				return this._giornata1;
			}
			set
			{
				this._giornata1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classifica_squadra", Storage="_squadra", ThisKey="nomeSquadra", OtherKey="nomeSquadra")]
		public EntitySet<squadra> squadra
		{
			get
			{
				return this._squadra;
			}
			set
			{
				this._squadra.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_giornata1(giornata entity)
		{
			this.SendPropertyChanging();
			entity.classifica = this;
		}
		
		private void detach_giornata1(giornata entity)
		{
			this.SendPropertyChanging();
			entity.classifica = null;
		}
		
		private void attach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.classifica = this;
		}
		
		private void detach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.classifica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.club")]
	public partial class club : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nomeSquadra;
		
		private string _comune;
		
		private EntityRef<squadra> _squadra;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    partial void OncomuneChanging(string value);
    partial void OncomuneChanged();
    #endregion
		
		public club()
		{
			this._squadra = default(EntityRef<squadra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					if (this._squadra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comune", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string comune
		{
			get
			{
				return this._comune;
			}
			set
			{
				if ((this._comune != value))
				{
					this.OncomuneChanging(value);
					this.SendPropertyChanging();
					this._comune = value;
					this.SendPropertyChanged("comune");
					this.OncomuneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="squadra_club", Storage="_squadra", ThisKey="nomeSquadra", OtherKey="nomeSquadra", IsForeignKey=true)]
		public squadra squadra
		{
			get
			{
				return this._squadra.Entity;
			}
			set
			{
				squadra previousValue = this._squadra.Entity;
				if (((previousValue != value) 
							|| (this._squadra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._squadra.Entity = null;
						previousValue.club1.Remove(this);
					}
					this._squadra.Entity = value;
					if ((value != null))
					{
						value.club1.Add(this);
						this._nomeSquadra = value.nomeSquadra;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("squadra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.contratto")]
	public partial class contratto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codContratto;
		
		private int _dataInizio;
		
		private int _dataScadenza;
		
		private string _ammonto;
		
		private EntityRef<giocatore> _giocatore;
		
		private EntityRef<allenatore> _allenatore;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodContrattoChanging(int value);
    partial void OncodContrattoChanged();
    partial void OndataInizioChanging(int value);
    partial void OndataInizioChanged();
    partial void OndataScadenzaChanging(int value);
    partial void OndataScadenzaChanged();
    partial void OnammontoChanging(string value);
    partial void OnammontoChanged();
    #endregion
		
		public contratto()
		{
			this._giocatore = default(EntityRef<giocatore>);
			this._allenatore = default(EntityRef<allenatore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codContratto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int codContratto
		{
			get
			{
				return this._codContratto;
			}
			set
			{
				if ((this._codContratto != value))
				{
					if ((this._giocatore.HasLoadedOrAssignedValue || this._allenatore.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodContrattoChanging(value);
					this.SendPropertyChanging();
					this._codContratto = value;
					this.SendPropertyChanged("codContratto");
					this.OncodContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataInizio", DbType="Int NOT NULL")]
		public int dataInizio
		{
			get
			{
				return this._dataInizio;
			}
			set
			{
				if ((this._dataInizio != value))
				{
					this.OndataInizioChanging(value);
					this.SendPropertyChanging();
					this._dataInizio = value;
					this.SendPropertyChanged("dataInizio");
					this.OndataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataScadenza", DbType="Int NOT NULL")]
		public int dataScadenza
		{
			get
			{
				return this._dataScadenza;
			}
			set
			{
				if ((this._dataScadenza != value))
				{
					this.OndataScadenzaChanging(value);
					this.SendPropertyChanging();
					this._dataScadenza = value;
					this.SendPropertyChanged("dataScadenza");
					this.OndataScadenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ammonto", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ammonto
		{
			get
			{
				return this._ammonto;
			}
			set
			{
				if ((this._ammonto != value))
				{
					this.OnammontoChanging(value);
					this.SendPropertyChanging();
					this._ammonto = value;
					this.SendPropertyChanged("ammonto");
					this.OnammontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="giocatore_contratto", Storage="_giocatore", ThisKey="codContratto", OtherKey="codContratto", IsForeignKey=true)]
		public giocatore giocatore
		{
			get
			{
				return this._giocatore.Entity;
			}
			set
			{
				giocatore previousValue = this._giocatore.Entity;
				if (((previousValue != value) 
							|| (this._giocatore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._giocatore.Entity = null;
						previousValue.contratto.Remove(this);
					}
					this._giocatore.Entity = value;
					if ((value != null))
					{
						value.contratto.Add(this);
						this._codContratto = value.codContratto;
					}
					else
					{
						this._codContratto = default(int);
					}
					this.SendPropertyChanged("giocatore");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="allenatore_contratto", Storage="_allenatore", ThisKey="codContratto", OtherKey="codContratto", IsForeignKey=true)]
		public allenatore allenatore
		{
			get
			{
				return this._allenatore.Entity;
			}
			set
			{
				allenatore previousValue = this._allenatore.Entity;
				if (((previousValue != value) 
							|| (this._allenatore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._allenatore.Entity = null;
						previousValue.contratto.Remove(this);
					}
					this._allenatore.Entity = value;
					if ((value != null))
					{
						value.contratto.Add(this);
						this._codContratto = value.codContratto;
					}
					else
					{
						this._codContratto = default(int);
					}
					this.SendPropertyChanged("allenatore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.convocazione")]
	public partial class convocazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF_GIO;
		
		private int _CodPartita;
		
		private EntitySet<partita> _partita;
		
		private EntitySet<giocatore> _giocatore;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCF_GIOChanging(string value);
    partial void OnCF_GIOChanged();
    partial void OnCodPartitaChanging(int value);
    partial void OnCodPartitaChanged();
    #endregion
		
		public convocazione()
		{
			this._partita = new EntitySet<partita>(new Action<partita>(this.attach_partita), new Action<partita>(this.detach_partita));
			this._giocatore = new EntitySet<giocatore>(new Action<giocatore>(this.attach_giocatore), new Action<giocatore>(this.detach_giocatore));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_GIO", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF_GIO
		{
			get
			{
				return this._CF_GIO;
			}
			set
			{
				if ((this._CF_GIO != value))
				{
					this.OnCF_GIOChanging(value);
					this.SendPropertyChanging();
					this._CF_GIO = value;
					this.SendPropertyChanged("CF_GIO");
					this.OnCF_GIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPartita", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodPartita
		{
			get
			{
				return this._CodPartita;
			}
			set
			{
				if ((this._CodPartita != value))
				{
					this.OnCodPartitaChanging(value);
					this.SendPropertyChanging();
					this._CodPartita = value;
					this.SendPropertyChanged("CodPartita");
					this.OnCodPartitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="convocazione_partita", Storage="_partita", ThisKey="CodPartita", OtherKey="CodPartita")]
		public EntitySet<partita> partita
		{
			get
			{
				return this._partita;
			}
			set
			{
				this._partita.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="convocazione_giocatore", Storage="_giocatore", ThisKey="CF_GIO", OtherKey="CF_GIO")]
		public EntitySet<giocatore> giocatore
		{
			get
			{
				return this._giocatore;
			}
			set
			{
				this._giocatore.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_partita(partita entity)
		{
			this.SendPropertyChanging();
			entity.convocazione = this;
		}
		
		private void detach_partita(partita entity)
		{
			this.SendPropertyChanging();
			entity.convocazione = null;
		}
		
		private void attach_giocatore(giocatore entity)
		{
			this.SendPropertyChanging();
			entity.convocazione = this;
		}
		
		private void detach_giocatore(giocatore entity)
		{
			this.SendPropertyChanging();
			entity.convocazione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.coppa")]
	public partial class coppa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codCoppa;
		
		private System.Nullable<int> _scudetti;
		
		private System.Nullable<int> _UCL;
		
		private System.Nullable<int> _CWC;
		
		private System.Nullable<int> _UEL;
		
		private EntityRef<vittoria> _vittoria;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodCoppaChanging(int value);
    partial void OncodCoppaChanged();
    partial void OnscudettiChanging(System.Nullable<int> value);
    partial void OnscudettiChanged();
    partial void OnUCLChanging(System.Nullable<int> value);
    partial void OnUCLChanged();
    partial void OnCWCChanging(System.Nullable<int> value);
    partial void OnCWCChanged();
    partial void OnUELChanging(System.Nullable<int> value);
    partial void OnUELChanged();
    #endregion
		
		public coppa()
		{
			this._vittoria = default(EntityRef<vittoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codCoppa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int codCoppa
		{
			get
			{
				return this._codCoppa;
			}
			set
			{
				if ((this._codCoppa != value))
				{
					if (this._vittoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodCoppaChanging(value);
					this.SendPropertyChanging();
					this._codCoppa = value;
					this.SendPropertyChanged("codCoppa");
					this.OncodCoppaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scudetti", DbType="Int")]
		public System.Nullable<int> scudetti
		{
			get
			{
				return this._scudetti;
			}
			set
			{
				if ((this._scudetti != value))
				{
					this.OnscudettiChanging(value);
					this.SendPropertyChanging();
					this._scudetti = value;
					this.SendPropertyChanged("scudetti");
					this.OnscudettiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UCL", DbType="Int")]
		public System.Nullable<int> UCL
		{
			get
			{
				return this._UCL;
			}
			set
			{
				if ((this._UCL != value))
				{
					this.OnUCLChanging(value);
					this.SendPropertyChanging();
					this._UCL = value;
					this.SendPropertyChanged("UCL");
					this.OnUCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CWC", DbType="Int")]
		public System.Nullable<int> CWC
		{
			get
			{
				return this._CWC;
			}
			set
			{
				if ((this._CWC != value))
				{
					this.OnCWCChanging(value);
					this.SendPropertyChanging();
					this._CWC = value;
					this.SendPropertyChanged("CWC");
					this.OnCWCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UEL", DbType="Int")]
		public System.Nullable<int> UEL
		{
			get
			{
				return this._UEL;
			}
			set
			{
				if ((this._UEL != value))
				{
					this.OnUELChanging(value);
					this.SendPropertyChanging();
					this._UEL = value;
					this.SendPropertyChanged("UEL");
					this.OnUELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vittoria_coppa", Storage="_vittoria", ThisKey="codCoppa", OtherKey="codCoppa", IsForeignKey=true)]
		public vittoria vittoria
		{
			get
			{
				return this._vittoria.Entity;
			}
			set
			{
				vittoria previousValue = this._vittoria.Entity;
				if (((previousValue != value) 
							|| (this._vittoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vittoria.Entity = null;
						previousValue.coppa.Remove(this);
					}
					this._vittoria.Entity = value;
					if ((value != null))
					{
						value.coppa.Add(this);
						this._codCoppa = value.codCoppa;
					}
					else
					{
						this._codCoppa = default(int);
					}
					this.SendPropertyChanged("vittoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.giocatore")]
	public partial class giocatore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF_GIO;
		
		private System.Nullable<int> _numMaglia;
		
		private string _ruolo;
		
		private int _partiteGiocate;
		
		private System.Nullable<char> _capitano;
		
		private string _goal;
		
		private string _tiri;
		
		private string _assist;
		
		private string _ammonizioni;
		
		private string _esplusioni;
		
		private int _codContratto;
		
		private string _nomeSquadra;
		
		private EntitySet<squadra> _squadra;
		
		private EntitySet<contratto> _contratto;
		
		private EntityRef<persona> _persona;
		
		private EntityRef<convocazione> _convocazione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCF_GIOChanging(string value);
    partial void OnCF_GIOChanged();
    partial void OnnumMagliaChanging(System.Nullable<int> value);
    partial void OnnumMagliaChanged();
    partial void OnruoloChanging(string value);
    partial void OnruoloChanged();
    partial void OnpartiteGiocateChanging(int value);
    partial void OnpartiteGiocateChanged();
    partial void OncapitanoChanging(System.Nullable<char> value);
    partial void OncapitanoChanged();
    partial void OngoalChanging(string value);
    partial void OngoalChanged();
    partial void OntiriChanging(string value);
    partial void OntiriChanged();
    partial void OnassistChanging(string value);
    partial void OnassistChanged();
    partial void OnammonizioniChanging(string value);
    partial void OnammonizioniChanged();
    partial void OnesplusioniChanging(string value);
    partial void OnesplusioniChanged();
    partial void OncodContrattoChanging(int value);
    partial void OncodContrattoChanged();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    #endregion
		
		public giocatore()
		{
			this._squadra = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra), new Action<squadra>(this.detach_squadra));
			this._contratto = new EntitySet<contratto>(new Action<contratto>(this.attach_contratto), new Action<contratto>(this.detach_contratto));
			this._persona = default(EntityRef<persona>);
			this._convocazione = default(EntityRef<convocazione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_GIO", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF_GIO
		{
			get
			{
				return this._CF_GIO;
			}
			set
			{
				if ((this._CF_GIO != value))
				{
					if ((this._persona.HasLoadedOrAssignedValue || this._convocazione.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCF_GIOChanging(value);
					this.SendPropertyChanging();
					this._CF_GIO = value;
					this.SendPropertyChanged("CF_GIO");
					this.OnCF_GIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numMaglia", DbType="Int")]
		public System.Nullable<int> numMaglia
		{
			get
			{
				return this._numMaglia;
			}
			set
			{
				if ((this._numMaglia != value))
				{
					this.OnnumMagliaChanging(value);
					this.SendPropertyChanging();
					this._numMaglia = value;
					this.SendPropertyChanged("numMaglia");
					this.OnnumMagliaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ruolo", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string ruolo
		{
			get
			{
				return this._ruolo;
			}
			set
			{
				if ((this._ruolo != value))
				{
					this.OnruoloChanging(value);
					this.SendPropertyChanging();
					this._ruolo = value;
					this.SendPropertyChanged("ruolo");
					this.OnruoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partiteGiocate", DbType="Int NOT NULL")]
		public int partiteGiocate
		{
			get
			{
				return this._partiteGiocate;
			}
			set
			{
				if ((this._partiteGiocate != value))
				{
					this.OnpartiteGiocateChanging(value);
					this.SendPropertyChanging();
					this._partiteGiocate = value;
					this.SendPropertyChanged("partiteGiocate");
					this.OnpartiteGiocateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capitano", DbType="NChar(1)")]
		public System.Nullable<char> capitano
		{
			get
			{
				return this._capitano;
			}
			set
			{
				if ((this._capitano != value))
				{
					this.OncapitanoChanging(value);
					this.SendPropertyChanging();
					this._capitano = value;
					this.SendPropertyChanged("capitano");
					this.OncapitanoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_goal", DbType="NVarChar(3)")]
		public string goal
		{
			get
			{
				return this._goal;
			}
			set
			{
				if ((this._goal != value))
				{
					this.OngoalChanging(value);
					this.SendPropertyChanging();
					this._goal = value;
					this.SendPropertyChanged("goal");
					this.OngoalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tiri", DbType="NVarChar(3)")]
		public string tiri
		{
			get
			{
				return this._tiri;
			}
			set
			{
				if ((this._tiri != value))
				{
					this.OntiriChanging(value);
					this.SendPropertyChanging();
					this._tiri = value;
					this.SendPropertyChanged("tiri");
					this.OntiriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assist", DbType="NVarChar(3)")]
		public string assist
		{
			get
			{
				return this._assist;
			}
			set
			{
				if ((this._assist != value))
				{
					this.OnassistChanging(value);
					this.SendPropertyChanging();
					this._assist = value;
					this.SendPropertyChanged("assist");
					this.OnassistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ammonizioni", DbType="NVarChar(3)")]
		public string ammonizioni
		{
			get
			{
				return this._ammonizioni;
			}
			set
			{
				if ((this._ammonizioni != value))
				{
					this.OnammonizioniChanging(value);
					this.SendPropertyChanging();
					this._ammonizioni = value;
					this.SendPropertyChanged("ammonizioni");
					this.OnammonizioniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_esplusioni", DbType="NVarChar(3)")]
		public string esplusioni
		{
			get
			{
				return this._esplusioni;
			}
			set
			{
				if ((this._esplusioni != value))
				{
					this.OnesplusioniChanging(value);
					this.SendPropertyChanging();
					this._esplusioni = value;
					this.SendPropertyChanged("esplusioni");
					this.OnesplusioniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codContratto", DbType="Int NOT NULL")]
		public int codContratto
		{
			get
			{
				return this._codContratto;
			}
			set
			{
				if ((this._codContratto != value))
				{
					this.OncodContrattoChanging(value);
					this.SendPropertyChanging();
					this._codContratto = value;
					this.SendPropertyChanged("codContratto");
					this.OncodContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="giocatore_squadra", Storage="_squadra", ThisKey="nomeSquadra", OtherKey="nomeSquadra")]
		public EntitySet<squadra> squadra
		{
			get
			{
				return this._squadra;
			}
			set
			{
				this._squadra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="giocatore_contratto", Storage="_contratto", ThisKey="codContratto", OtherKey="codContratto")]
		public EntitySet<contratto> contratto
		{
			get
			{
				return this._contratto;
			}
			set
			{
				this._contratto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_giocatore", Storage="_persona", ThisKey="CF_GIO", OtherKey="CF", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.giocatore1.Remove(this);
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.giocatore1.Add(this);
						this._CF_GIO = value.CF;
					}
					else
					{
						this._CF_GIO = default(string);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="convocazione_giocatore", Storage="_convocazione", ThisKey="CF_GIO", OtherKey="CF_GIO", IsForeignKey=true)]
		public convocazione convocazione
		{
			get
			{
				return this._convocazione.Entity;
			}
			set
			{
				convocazione previousValue = this._convocazione.Entity;
				if (((previousValue != value) 
							|| (this._convocazione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._convocazione.Entity = null;
						previousValue.giocatore.Remove(this);
					}
					this._convocazione.Entity = value;
					if ((value != null))
					{
						value.giocatore.Add(this);
						this._CF_GIO = value.CF_GIO;
					}
					else
					{
						this._CF_GIO = default(string);
					}
					this.SendPropertyChanged("convocazione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.giocatore = this;
		}
		
		private void detach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.giocatore = null;
		}
		
		private void attach_contratto(contratto entity)
		{
			this.SendPropertyChanging();
			entity.giocatore = this;
		}
		
		private void detach_contratto(contratto entity)
		{
			this.SendPropertyChanging();
			entity.giocatore = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.giornata")]
	public partial class giornata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _giornata1;
		
		private string _stagione;
		
		private EntitySet<campionato> _campionato;
		
		private EntityRef<partita> _partita;
		
		private EntityRef<classifica> _classifica;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongiornata1Changing(int value);
    partial void Ongiornata1Changed();
    partial void OnstagioneChanging(string value);
    partial void OnstagioneChanged();
    #endregion
		
		public giornata()
		{
			this._campionato = new EntitySet<campionato>(new Action<campionato>(this.attach_campionato), new Action<campionato>(this.detach_campionato));
			this._partita = default(EntityRef<partita>);
			this._classifica = default(EntityRef<classifica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="giornata", Storage="_giornata1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int giornata1
		{
			get
			{
				return this._giornata1;
			}
			set
			{
				if ((this._giornata1 != value))
				{
					this.Ongiornata1Changing(value);
					this.SendPropertyChanging();
					this._giornata1 = value;
					this.SendPropertyChanged("giornata1");
					this.Ongiornata1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stagione", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string stagione
		{
			get
			{
				return this._stagione;
			}
			set
			{
				if ((this._stagione != value))
				{
					this.OnstagioneChanging(value);
					this.SendPropertyChanging();
					this._stagione = value;
					this.SendPropertyChanged("stagione");
					this.OnstagioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="giornata_campionato", Storage="_campionato", ThisKey="stagione", OtherKey="stagione")]
		public EntitySet<campionato> campionato
		{
			get
			{
				return this._campionato;
			}
			set
			{
				this._campionato.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_giornata", Storage="_partita", ThisKey="giornata1", OtherKey="giornata", IsForeignKey=true)]
		public partita partita
		{
			get
			{
				return this._partita.Entity;
			}
			set
			{
				partita previousValue = this._partita.Entity;
				if (((previousValue != value) 
							|| (this._partita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._partita.Entity = null;
						previousValue.giornata1.Remove(this);
					}
					this._partita.Entity = value;
					if ((value != null))
					{
						value.giornata1.Add(this);
						this._giornata1 = value.giornata;
					}
					else
					{
						this._giornata1 = default(int);
					}
					this.SendPropertyChanged("partita");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classifica_giornata", Storage="_classifica", ThisKey="giornata1", OtherKey="giornata", IsForeignKey=true)]
		public classifica classifica
		{
			get
			{
				return this._classifica.Entity;
			}
			set
			{
				classifica previousValue = this._classifica.Entity;
				if (((previousValue != value) 
							|| (this._classifica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._classifica.Entity = null;
						previousValue.giornata1.Remove(this);
					}
					this._classifica.Entity = value;
					if ((value != null))
					{
						value.giornata1.Add(this);
						this._giornata1 = value.giornata;
					}
					else
					{
						this._giornata1 = default(int);
					}
					this.SendPropertyChanged("classifica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_campionato(campionato entity)
		{
			this.SendPropertyChanging();
			entity.giornata = this;
		}
		
		private void detach_campionato(campionato entity)
		{
			this.SendPropertyChanging();
			entity.giornata = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.iscrizione")]
	public partial class iscrizione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _stagione;
		
		private string _nomeSquadra;
		
		private EntitySet<squadra> _squadra;
		
		private EntitySet<campionato> _campionato;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstagioneChanging(string value);
    partial void OnstagioneChanged();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    #endregion
		
		public iscrizione()
		{
			this._squadra = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra), new Action<squadra>(this.detach_squadra));
			this._campionato = new EntitySet<campionato>(new Action<campionato>(this.attach_campionato), new Action<campionato>(this.detach_campionato));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stagione", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string stagione
		{
			get
			{
				return this._stagione;
			}
			set
			{
				if ((this._stagione != value))
				{
					this.OnstagioneChanging(value);
					this.SendPropertyChanging();
					this._stagione = value;
					this.SendPropertyChanged("stagione");
					this.OnstagioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iscrizione_squadra", Storage="_squadra", ThisKey="nomeSquadra", OtherKey="nomeSquadra")]
		public EntitySet<squadra> squadra
		{
			get
			{
				return this._squadra;
			}
			set
			{
				this._squadra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iscrizione_campionato", Storage="_campionato", ThisKey="stagione", OtherKey="stagione")]
		public EntitySet<campionato> campionato
		{
			get
			{
				return this._campionato;
			}
			set
			{
				this._campionato.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.iscrizione = this;
		}
		
		private void detach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.iscrizione = null;
		}
		
		private void attach_campionato(campionato entity)
		{
			this.SendPropertyChanging();
			entity.iscrizione = this;
		}
		
		private void detach_campionato(campionato entity)
		{
			this.SendPropertyChanging();
			entity.iscrizione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.istruzione")]
	public partial class istruzione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF_ALL;
		
		private int _CodPartita;
		
		private EntitySet<partita> _partita;
		
		private EntitySet<allenatore> _allenatore;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCF_ALLChanging(string value);
    partial void OnCF_ALLChanged();
    partial void OnCodPartitaChanging(int value);
    partial void OnCodPartitaChanged();
    #endregion
		
		public istruzione()
		{
			this._partita = new EntitySet<partita>(new Action<partita>(this.attach_partita), new Action<partita>(this.detach_partita));
			this._allenatore = new EntitySet<allenatore>(new Action<allenatore>(this.attach_allenatore), new Action<allenatore>(this.detach_allenatore));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_ALL", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF_ALL
		{
			get
			{
				return this._CF_ALL;
			}
			set
			{
				if ((this._CF_ALL != value))
				{
					this.OnCF_ALLChanging(value);
					this.SendPropertyChanging();
					this._CF_ALL = value;
					this.SendPropertyChanged("CF_ALL");
					this.OnCF_ALLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPartita", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodPartita
		{
			get
			{
				return this._CodPartita;
			}
			set
			{
				if ((this._CodPartita != value))
				{
					this.OnCodPartitaChanging(value);
					this.SendPropertyChanging();
					this._CodPartita = value;
					this.SendPropertyChanged("CodPartita");
					this.OnCodPartitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="istruzione_partita", Storage="_partita", ThisKey="CodPartita", OtherKey="CodPartita")]
		public EntitySet<partita> partita
		{
			get
			{
				return this._partita;
			}
			set
			{
				this._partita.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="istruzione_allenatore", Storage="_allenatore", ThisKey="CF_ALL", OtherKey="CF_ALL")]
		public EntitySet<allenatore> allenatore
		{
			get
			{
				return this._allenatore;
			}
			set
			{
				this._allenatore.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_partita(partita entity)
		{
			this.SendPropertyChanging();
			entity.istruzione = this;
		}
		
		private void detach_partita(partita entity)
		{
			this.SendPropertyChanging();
			entity.istruzione = null;
		}
		
		private void attach_allenatore(allenatore entity)
		{
			this.SendPropertyChanging();
			entity.istruzione = this;
		}
		
		private void detach_allenatore(allenatore entity)
		{
			this.SendPropertyChanging();
			entity.istruzione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.nazionale")]
	public partial class nazionale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nomeSquadra;
		
		private string _nazione;
		
		private EntityRef<squadra> _squadra;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    partial void OnnazioneChanging(string value);
    partial void OnnazioneChanged();
    #endregion
		
		public nazionale()
		{
			this._squadra = default(EntityRef<squadra>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					if (this._squadra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazione", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nazione
		{
			get
			{
				return this._nazione;
			}
			set
			{
				if ((this._nazione != value))
				{
					this.OnnazioneChanging(value);
					this.SendPropertyChanging();
					this._nazione = value;
					this.SendPropertyChanged("nazione");
					this.OnnazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="squadra_nazionale", Storage="_squadra", ThisKey="nomeSquadra", OtherKey="nomeSquadra", IsForeignKey=true)]
		public squadra squadra
		{
			get
			{
				return this._squadra.Entity;
			}
			set
			{
				squadra previousValue = this._squadra.Entity;
				if (((previousValue != value) 
							|| (this._squadra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._squadra.Entity = null;
						previousValue.nazionale1.Remove(this);
					}
					this._squadra.Entity = value;
					if ((value != null))
					{
						value.nazionale1.Add(this);
						this._nomeSquadra = value.nomeSquadra;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("squadra");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.partita")]
	public partial class partita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodPartita;
		
		private string _risultato;
		
		private System.DateTime _data;
		
		private string _ora;
		
		private string _CF_ARB;
		
		private int _codStadio;
		
		private string _stagione;
		
		private int _giornata;
		
		private string _nomeSquadraCasa;
		
		private string _nomeSquadraTrasferta;
		
		private EntitySet<arbitro> _arbitro;
		
		private EntitySet<stadio> _stadio;
		
		private EntitySet<giornata> _giornata1;
		
		private EntitySet<squadra> _squadra;
		
		private EntitySet<squadra> _squadra1;
		
		private EntityRef<istruzione> _istruzione;
		
		private EntityRef<convocazione> _convocazione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPartitaChanging(int value);
    partial void OnCodPartitaChanged();
    partial void OnrisultatoChanging(string value);
    partial void OnrisultatoChanged();
    partial void OndataChanging(System.DateTime value);
    partial void OndataChanged();
    partial void OnoraChanging(string value);
    partial void OnoraChanged();
    partial void OnCF_ARBChanging(string value);
    partial void OnCF_ARBChanged();
    partial void OncodStadioChanging(int value);
    partial void OncodStadioChanged();
    partial void OnstagioneChanging(string value);
    partial void OnstagioneChanged();
    partial void OngiornataChanging(int value);
    partial void OngiornataChanged();
    partial void OnnomeSquadraCasaChanging(string value);
    partial void OnnomeSquadraCasaChanged();
    partial void OnnomeSquadraTrasfertaChanging(string value);
    partial void OnnomeSquadraTrasfertaChanged();
    #endregion
		
		public partita()
		{
			this._arbitro = new EntitySet<arbitro>(new Action<arbitro>(this.attach_arbitro), new Action<arbitro>(this.detach_arbitro));
			this._stadio = new EntitySet<stadio>(new Action<stadio>(this.attach_stadio), new Action<stadio>(this.detach_stadio));
			this._giornata1 = new EntitySet<giornata>(new Action<giornata>(this.attach_giornata1), new Action<giornata>(this.detach_giornata1));
			this._squadra = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra), new Action<squadra>(this.detach_squadra));
			this._squadra1 = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra1), new Action<squadra>(this.detach_squadra1));
			this._istruzione = default(EntityRef<istruzione>);
			this._convocazione = default(EntityRef<convocazione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPartita", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CodPartita
		{
			get
			{
				return this._CodPartita;
			}
			set
			{
				if ((this._CodPartita != value))
				{
					if ((this._istruzione.HasLoadedOrAssignedValue || this._convocazione.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPartitaChanging(value);
					this.SendPropertyChanging();
					this._CodPartita = value;
					this.SendPropertyChanged("CodPartita");
					this.OnCodPartitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_risultato", DbType="NVarChar(5)")]
		public string risultato
		{
			get
			{
				return this._risultato;
			}
			set
			{
				if ((this._risultato != value))
				{
					this.OnrisultatoChanging(value);
					this.SendPropertyChanging();
					this._risultato = value;
					this.SendPropertyChanged("risultato");
					this.OnrisultatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Date NOT NULL")]
		public System.DateTime data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ora", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string ora
		{
			get
			{
				return this._ora;
			}
			set
			{
				if ((this._ora != value))
				{
					this.OnoraChanging(value);
					this.SendPropertyChanging();
					this._ora = value;
					this.SendPropertyChanged("ora");
					this.OnoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_ARB", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string CF_ARB
		{
			get
			{
				return this._CF_ARB;
			}
			set
			{
				if ((this._CF_ARB != value))
				{
					this.OnCF_ARBChanging(value);
					this.SendPropertyChanging();
					this._CF_ARB = value;
					this.SendPropertyChanged("CF_ARB");
					this.OnCF_ARBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codStadio", DbType="Int NOT NULL")]
		public int codStadio
		{
			get
			{
				return this._codStadio;
			}
			set
			{
				if ((this._codStadio != value))
				{
					this.OncodStadioChanging(value);
					this.SendPropertyChanging();
					this._codStadio = value;
					this.SendPropertyChanged("codStadio");
					this.OncodStadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stagione", DbType="NVarChar(7) NOT NULL", CanBeNull=false)]
		public string stagione
		{
			get
			{
				return this._stagione;
			}
			set
			{
				if ((this._stagione != value))
				{
					this.OnstagioneChanging(value);
					this.SendPropertyChanging();
					this._stagione = value;
					this.SendPropertyChanged("stagione");
					this.OnstagioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giornata", DbType="Int NOT NULL")]
		public int giornata
		{
			get
			{
				return this._giornata;
			}
			set
			{
				if ((this._giornata != value))
				{
					this.OngiornataChanging(value);
					this.SendPropertyChanging();
					this._giornata = value;
					this.SendPropertyChanged("giornata");
					this.OngiornataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadraCasa", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nomeSquadraCasa
		{
			get
			{
				return this._nomeSquadraCasa;
			}
			set
			{
				if ((this._nomeSquadraCasa != value))
				{
					this.OnnomeSquadraCasaChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadraCasa = value;
					this.SendPropertyChanged("nomeSquadraCasa");
					this.OnnomeSquadraCasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadraTrasferta", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nomeSquadraTrasferta
		{
			get
			{
				return this._nomeSquadraTrasferta;
			}
			set
			{
				if ((this._nomeSquadraTrasferta != value))
				{
					this.OnnomeSquadraTrasfertaChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadraTrasferta = value;
					this.SendPropertyChanged("nomeSquadraTrasferta");
					this.OnnomeSquadraTrasfertaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_arbitro", Storage="_arbitro", ThisKey="CF_ARB", OtherKey="CF_ARB")]
		public EntitySet<arbitro> arbitro
		{
			get
			{
				return this._arbitro;
			}
			set
			{
				this._arbitro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_stadio", Storage="_stadio", ThisKey="codStadio", OtherKey="codStadio")]
		public EntitySet<stadio> stadio
		{
			get
			{
				return this._stadio;
			}
			set
			{
				this._stadio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_giornata", Storage="_giornata1", ThisKey="giornata", OtherKey="giornata1")]
		public EntitySet<giornata> giornata1
		{
			get
			{
				return this._giornata1;
			}
			set
			{
				this._giornata1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_squadra", Storage="_squadra", ThisKey="nomeSquadraCasa", OtherKey="nomeSquadra")]
		public EntitySet<squadra> squadra
		{
			get
			{
				return this._squadra;
			}
			set
			{
				this._squadra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_squadra1", Storage="_squadra1", ThisKey="nomeSquadraTrasferta", OtherKey="nomeSquadra")]
		public EntitySet<squadra> squadra1
		{
			get
			{
				return this._squadra1;
			}
			set
			{
				this._squadra1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="istruzione_partita", Storage="_istruzione", ThisKey="CodPartita", OtherKey="CodPartita", IsForeignKey=true)]
		public istruzione istruzione
		{
			get
			{
				return this._istruzione.Entity;
			}
			set
			{
				istruzione previousValue = this._istruzione.Entity;
				if (((previousValue != value) 
							|| (this._istruzione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._istruzione.Entity = null;
						previousValue.partita.Remove(this);
					}
					this._istruzione.Entity = value;
					if ((value != null))
					{
						value.partita.Add(this);
						this._CodPartita = value.CodPartita;
					}
					else
					{
						this._CodPartita = default(int);
					}
					this.SendPropertyChanged("istruzione");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="convocazione_partita", Storage="_convocazione", ThisKey="CodPartita", OtherKey="CodPartita", IsForeignKey=true)]
		public convocazione convocazione
		{
			get
			{
				return this._convocazione.Entity;
			}
			set
			{
				convocazione previousValue = this._convocazione.Entity;
				if (((previousValue != value) 
							|| (this._convocazione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._convocazione.Entity = null;
						previousValue.partita.Remove(this);
					}
					this._convocazione.Entity = value;
					if ((value != null))
					{
						value.partita.Add(this);
						this._CodPartita = value.CodPartita;
					}
					else
					{
						this._CodPartita = default(int);
					}
					this.SendPropertyChanged("convocazione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_arbitro(arbitro entity)
		{
			this.SendPropertyChanging();
			entity.partita = this;
		}
		
		private void detach_arbitro(arbitro entity)
		{
			this.SendPropertyChanging();
			entity.partita = null;
		}
		
		private void attach_stadio(stadio entity)
		{
			this.SendPropertyChanging();
			entity.partita = this;
		}
		
		private void detach_stadio(stadio entity)
		{
			this.SendPropertyChanging();
			entity.partita = null;
		}
		
		private void attach_giornata1(giornata entity)
		{
			this.SendPropertyChanging();
			entity.partita = this;
		}
		
		private void detach_giornata1(giornata entity)
		{
			this.SendPropertyChanging();
			entity.partita = null;
		}
		
		private void attach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.partita = this;
		}
		
		private void detach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.partita = null;
		}
		
		private void attach_squadra1(squadra entity)
		{
			this.SendPropertyChanging();
			entity.partita1 = this;
		}
		
		private void detach_squadra1(squadra entity)
		{
			this.SendPropertyChanging();
			entity.partita1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.persona")]
	public partial class persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF;
		
		private string _nome;
		
		private string _cognome;
		
		private string _nazionalita;
		
		private System.DateTime _dataNascita;
		
		private string _PRESIDENTE;
		
		private string _GIOCATORE;
		
		private string _ARBITRO;
		
		private string _ALLENATORE;
		
		private EntitySet<allenatore> _allenatore1;
		
		private EntitySet<arbitro> _arbitro1;
		
		private EntitySet<giocatore> _giocatore1;
		
		private EntitySet<presidente> _presidente1;
		
		private EntityRef<presenza> _presenza;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OncognomeChanging(string value);
    partial void OncognomeChanged();
    partial void OnnazionalitaChanging(string value);
    partial void OnnazionalitaChanged();
    partial void OndataNascitaChanging(System.DateTime value);
    partial void OndataNascitaChanged();
    partial void OnPRESIDENTEChanging(string value);
    partial void OnPRESIDENTEChanged();
    partial void OnGIOCATOREChanging(string value);
    partial void OnGIOCATOREChanged();
    partial void OnARBITROChanging(string value);
    partial void OnARBITROChanged();
    partial void OnALLENATOREChanging(string value);
    partial void OnALLENATOREChanged();
    #endregion
		
		public persona()
		{
			this._allenatore1 = new EntitySet<allenatore>(new Action<allenatore>(this.attach_allenatore1), new Action<allenatore>(this.detach_allenatore1));
			this._arbitro1 = new EntitySet<arbitro>(new Action<arbitro>(this.attach_arbitro1), new Action<arbitro>(this.detach_arbitro1));
			this._giocatore1 = new EntitySet<giocatore>(new Action<giocatore>(this.attach_giocatore1), new Action<giocatore>(this.detach_giocatore1));
			this._presidente1 = new EntitySet<presidente>(new Action<presidente>(this.attach_presidente1), new Action<presidente>(this.detach_presidente1));
			this._presenza = default(EntityRef<presenza>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					if (this._presenza.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cognome", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string cognome
		{
			get
			{
				return this._cognome;
			}
			set
			{
				if ((this._cognome != value))
				{
					this.OncognomeChanging(value);
					this.SendPropertyChanging();
					this._cognome = value;
					this.SendPropertyChanged("cognome");
					this.OncognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazionalita", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nazionalita
		{
			get
			{
				return this._nazionalita;
			}
			set
			{
				if ((this._nazionalita != value))
				{
					this.OnnazionalitaChanging(value);
					this.SendPropertyChanging();
					this._nazionalita = value;
					this.SendPropertyChanged("nazionalita");
					this.OnnazionalitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataNascita", DbType="Date NOT NULL")]
		public System.DateTime dataNascita
		{
			get
			{
				return this._dataNascita;
			}
			set
			{
				if ((this._dataNascita != value))
				{
					this.OndataNascitaChanging(value);
					this.SendPropertyChanging();
					this._dataNascita = value;
					this.SendPropertyChanged("dataNascita");
					this.OndataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRESIDENTE", DbType="NVarChar(16)")]
		public string PRESIDENTE
		{
			get
			{
				return this._PRESIDENTE;
			}
			set
			{
				if ((this._PRESIDENTE != value))
				{
					this.OnPRESIDENTEChanging(value);
					this.SendPropertyChanging();
					this._PRESIDENTE = value;
					this.SendPropertyChanged("PRESIDENTE");
					this.OnPRESIDENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOCATORE", DbType="NVarChar(16)")]
		public string GIOCATORE
		{
			get
			{
				return this._GIOCATORE;
			}
			set
			{
				if ((this._GIOCATORE != value))
				{
					this.OnGIOCATOREChanging(value);
					this.SendPropertyChanging();
					this._GIOCATORE = value;
					this.SendPropertyChanged("GIOCATORE");
					this.OnGIOCATOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARBITRO", DbType="NVarChar(16)")]
		public string ARBITRO
		{
			get
			{
				return this._ARBITRO;
			}
			set
			{
				if ((this._ARBITRO != value))
				{
					this.OnARBITROChanging(value);
					this.SendPropertyChanging();
					this._ARBITRO = value;
					this.SendPropertyChanged("ARBITRO");
					this.OnARBITROChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALLENATORE", DbType="NVarChar(16)")]
		public string ALLENATORE
		{
			get
			{
				return this._ALLENATORE;
			}
			set
			{
				if ((this._ALLENATORE != value))
				{
					this.OnALLENATOREChanging(value);
					this.SendPropertyChanging();
					this._ALLENATORE = value;
					this.SendPropertyChanged("ALLENATORE");
					this.OnALLENATOREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_allenatore", Storage="_allenatore1", ThisKey="CF", OtherKey="CF_ALL")]
		public EntitySet<allenatore> allenatore1
		{
			get
			{
				return this._allenatore1;
			}
			set
			{
				this._allenatore1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_arbitro", Storage="_arbitro1", ThisKey="CF", OtherKey="CF_ARB")]
		public EntitySet<arbitro> arbitro1
		{
			get
			{
				return this._arbitro1;
			}
			set
			{
				this._arbitro1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_giocatore", Storage="_giocatore1", ThisKey="CF", OtherKey="CF_GIO")]
		public EntitySet<giocatore> giocatore1
		{
			get
			{
				return this._giocatore1;
			}
			set
			{
				this._giocatore1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_presidente", Storage="_presidente1", ThisKey="CF", OtherKey="CF_PRE")]
		public EntitySet<presidente> presidente1
		{
			get
			{
				return this._presidente1;
			}
			set
			{
				this._presidente1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="presenza_persona", Storage="_presenza", ThisKey="CF", OtherKey="CF", IsForeignKey=true)]
		public presenza presenza
		{
			get
			{
				return this._presenza.Entity;
			}
			set
			{
				presenza previousValue = this._presenza.Entity;
				if (((previousValue != value) 
							|| (this._presenza.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._presenza.Entity = null;
						previousValue.persona.Remove(this);
					}
					this._presenza.Entity = value;
					if ((value != null))
					{
						value.persona.Add(this);
						this._CF = value.CF;
					}
					else
					{
						this._CF = default(string);
					}
					this.SendPropertyChanged("presenza");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_allenatore1(allenatore entity)
		{
			this.SendPropertyChanging();
			entity.persona = this;
		}
		
		private void detach_allenatore1(allenatore entity)
		{
			this.SendPropertyChanging();
			entity.persona = null;
		}
		
		private void attach_arbitro1(arbitro entity)
		{
			this.SendPropertyChanging();
			entity.persona = this;
		}
		
		private void detach_arbitro1(arbitro entity)
		{
			this.SendPropertyChanging();
			entity.persona = null;
		}
		
		private void attach_giocatore1(giocatore entity)
		{
			this.SendPropertyChanging();
			entity.persona = this;
		}
		
		private void detach_giocatore1(giocatore entity)
		{
			this.SendPropertyChanging();
			entity.persona = null;
		}
		
		private void attach_presidente1(presidente entity)
		{
			this.SendPropertyChanging();
			entity.persona = this;
		}
		
		private void detach_presidente1(presidente entity)
		{
			this.SendPropertyChanging();
			entity.persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.presenza")]
	public partial class presenza : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _stagione;
		
		private string _CF;
		
		private EntitySet<campionato> _campionato;
		
		private EntitySet<persona> _persona;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstagioneChanging(string value);
    partial void OnstagioneChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    #endregion
		
		public presenza()
		{
			this._campionato = new EntitySet<campionato>(new Action<campionato>(this.attach_campionato), new Action<campionato>(this.detach_campionato));
			this._persona = new EntitySet<persona>(new Action<persona>(this.attach_persona), new Action<persona>(this.detach_persona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stagione", DbType="NVarChar(7) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string stagione
		{
			get
			{
				return this._stagione;
			}
			set
			{
				if ((this._stagione != value))
				{
					this.OnstagioneChanging(value);
					this.SendPropertyChanging();
					this._stagione = value;
					this.SendPropertyChanged("stagione");
					this.OnstagioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="presenza_campionato", Storage="_campionato", ThisKey="stagione", OtherKey="stagione")]
		public EntitySet<campionato> campionato
		{
			get
			{
				return this._campionato;
			}
			set
			{
				this._campionato.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="presenza_persona", Storage="_persona", ThisKey="CF", OtherKey="CF")]
		public EntitySet<persona> persona
		{
			get
			{
				return this._persona;
			}
			set
			{
				this._persona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_campionato(campionato entity)
		{
			this.SendPropertyChanging();
			entity.presenza = this;
		}
		
		private void detach_campionato(campionato entity)
		{
			this.SendPropertyChanging();
			entity.presenza = null;
		}
		
		private void attach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.presenza = this;
		}
		
		private void detach_persona(persona entity)
		{
			this.SendPropertyChanging();
			entity.presenza = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.presidente")]
	public partial class presidente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CF_PRE;
		
		private EntitySet<squadra> _squadra;
		
		private EntityRef<persona> _persona;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCF_PREChanging(string value);
    partial void OnCF_PREChanged();
    #endregion
		
		public presidente()
		{
			this._squadra = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra), new Action<squadra>(this.detach_squadra));
			this._persona = default(EntityRef<persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_PRE", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CF_PRE
		{
			get
			{
				return this._CF_PRE;
			}
			set
			{
				if ((this._CF_PRE != value))
				{
					if (this._persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCF_PREChanging(value);
					this.SendPropertyChanging();
					this._CF_PRE = value;
					this.SendPropertyChanged("CF_PRE");
					this.OnCF_PREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="presidente_squadra", Storage="_squadra", ThisKey="CF_PRE", OtherKey="CF_PRE")]
		public EntitySet<squadra> squadra
		{
			get
			{
				return this._squadra;
			}
			set
			{
				this._squadra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="persona_presidente", Storage="_persona", ThisKey="CF_PRE", OtherKey="CF", IsForeignKey=true)]
		public persona persona
		{
			get
			{
				return this._persona.Entity;
			}
			set
			{
				persona previousValue = this._persona.Entity;
				if (((previousValue != value) 
							|| (this._persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._persona.Entity = null;
						previousValue.presidente1.Remove(this);
					}
					this._persona.Entity = value;
					if ((value != null))
					{
						value.presidente1.Add(this);
						this._CF_PRE = value.CF;
					}
					else
					{
						this._CF_PRE = default(string);
					}
					this.SendPropertyChanged("persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.presidente = this;
		}
		
		private void detach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.presidente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.squadra")]
	public partial class squadra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nomeSquadra;
		
		private string _modulo;
		
		private string _stemma;
		
		private string _CF_PRE;
		
		private string _NAZIONALE;
		
		private string _CLUB;
		
		private EntitySet<club> _club1;
		
		private EntitySet<nazionale> _nazionale1;
		
		private EntityRef<classifica> _classifica;
		
		private EntityRef<partita> _partita;
		
		private EntityRef<partita> _partita1;
		
		private EntityRef<vittoria> _vittoria;
		
		private EntityRef<iscrizione> _iscrizione;
		
		private EntityRef<giocatore> _giocatore;
		
		private EntityRef<allenatore> _allenatore;
		
		private EntityRef<presidente> _presidente;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    partial void OnmoduloChanging(string value);
    partial void OnmoduloChanged();
    partial void OnstemmaChanging(string value);
    partial void OnstemmaChanged();
    partial void OnCF_PREChanging(string value);
    partial void OnCF_PREChanged();
    partial void OnNAZIONALEChanging(string value);
    partial void OnNAZIONALEChanged();
    partial void OnCLUBChanging(string value);
    partial void OnCLUBChanged();
    #endregion
		
		public squadra()
		{
			this._club1 = new EntitySet<club>(new Action<club>(this.attach_club1), new Action<club>(this.detach_club1));
			this._nazionale1 = new EntitySet<nazionale>(new Action<nazionale>(this.attach_nazionale1), new Action<nazionale>(this.detach_nazionale1));
			this._classifica = default(EntityRef<classifica>);
			this._partita = default(EntityRef<partita>);
			this._partita1 = default(EntityRef<partita>);
			this._vittoria = default(EntityRef<vittoria>);
			this._iscrizione = default(EntityRef<iscrizione>);
			this._giocatore = default(EntityRef<giocatore>);
			this._allenatore = default(EntityRef<allenatore>);
			this._presidente = default(EntityRef<presidente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					if (((((((this._classifica.HasLoadedOrAssignedValue || this._partita.HasLoadedOrAssignedValue) 
								|| this._partita1.HasLoadedOrAssignedValue) 
								|| this._vittoria.HasLoadedOrAssignedValue) 
								|| this._iscrizione.HasLoadedOrAssignedValue) 
								|| this._giocatore.HasLoadedOrAssignedValue) 
								|| this._allenatore.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modulo", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string modulo
		{
			get
			{
				return this._modulo;
			}
			set
			{
				if ((this._modulo != value))
				{
					this.OnmoduloChanging(value);
					this.SendPropertyChanging();
					this._modulo = value;
					this.SendPropertyChanged("modulo");
					this.OnmoduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stemma", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string stemma
		{
			get
			{
				return this._stemma;
			}
			set
			{
				if ((this._stemma != value))
				{
					this.OnstemmaChanging(value);
					this.SendPropertyChanging();
					this._stemma = value;
					this.SendPropertyChanged("stemma");
					this.OnstemmaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF_PRE", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string CF_PRE
		{
			get
			{
				return this._CF_PRE;
			}
			set
			{
				if ((this._CF_PRE != value))
				{
					if (this._presidente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCF_PREChanging(value);
					this.SendPropertyChanging();
					this._CF_PRE = value;
					this.SendPropertyChanged("CF_PRE");
					this.OnCF_PREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAZIONALE", DbType="NVarChar(30)")]
		public string NAZIONALE
		{
			get
			{
				return this._NAZIONALE;
			}
			set
			{
				if ((this._NAZIONALE != value))
				{
					this.OnNAZIONALEChanging(value);
					this.SendPropertyChanging();
					this._NAZIONALE = value;
					this.SendPropertyChanged("NAZIONALE");
					this.OnNAZIONALEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLUB", DbType="NVarChar(30)")]
		public string CLUB
		{
			get
			{
				return this._CLUB;
			}
			set
			{
				if ((this._CLUB != value))
				{
					this.OnCLUBChanging(value);
					this.SendPropertyChanging();
					this._CLUB = value;
					this.SendPropertyChanged("CLUB");
					this.OnCLUBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="squadra_club", Storage="_club1", ThisKey="nomeSquadra", OtherKey="nomeSquadra")]
		public EntitySet<club> club1
		{
			get
			{
				return this._club1;
			}
			set
			{
				this._club1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="squadra_nazionale", Storage="_nazionale1", ThisKey="nomeSquadra", OtherKey="nomeSquadra")]
		public EntitySet<nazionale> nazionale1
		{
			get
			{
				return this._nazionale1;
			}
			set
			{
				this._nazionale1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="classifica_squadra", Storage="_classifica", ThisKey="nomeSquadra", OtherKey="nomeSquadra", IsForeignKey=true)]
		public classifica classifica
		{
			get
			{
				return this._classifica.Entity;
			}
			set
			{
				classifica previousValue = this._classifica.Entity;
				if (((previousValue != value) 
							|| (this._classifica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._classifica.Entity = null;
						previousValue.squadra.Remove(this);
					}
					this._classifica.Entity = value;
					if ((value != null))
					{
						value.squadra.Add(this);
						this._nomeSquadra = value.nomeSquadra;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("classifica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_squadra", Storage="_partita", ThisKey="nomeSquadra", OtherKey="nomeSquadraCasa", IsForeignKey=true)]
		public partita partita
		{
			get
			{
				return this._partita.Entity;
			}
			set
			{
				partita previousValue = this._partita.Entity;
				if (((previousValue != value) 
							|| (this._partita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._partita.Entity = null;
						previousValue.squadra.Remove(this);
					}
					this._partita.Entity = value;
					if ((value != null))
					{
						value.squadra.Add(this);
						this._nomeSquadra = value.nomeSquadraCasa;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("partita");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_squadra1", Storage="_partita1", ThisKey="nomeSquadra", OtherKey="nomeSquadraTrasferta", IsForeignKey=true)]
		public partita partita1
		{
			get
			{
				return this._partita1.Entity;
			}
			set
			{
				partita previousValue = this._partita1.Entity;
				if (((previousValue != value) 
							|| (this._partita1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._partita1.Entity = null;
						previousValue.squadra1.Remove(this);
					}
					this._partita1.Entity = value;
					if ((value != null))
					{
						value.squadra1.Add(this);
						this._nomeSquadra = value.nomeSquadraTrasferta;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("partita1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vittoria_squadra", Storage="_vittoria", ThisKey="nomeSquadra", OtherKey="nomeSquadra", IsForeignKey=true)]
		public vittoria vittoria
		{
			get
			{
				return this._vittoria.Entity;
			}
			set
			{
				vittoria previousValue = this._vittoria.Entity;
				if (((previousValue != value) 
							|| (this._vittoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vittoria.Entity = null;
						previousValue.squadra.Remove(this);
					}
					this._vittoria.Entity = value;
					if ((value != null))
					{
						value.squadra.Add(this);
						this._nomeSquadra = value.nomeSquadra;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("vittoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="iscrizione_squadra", Storage="_iscrizione", ThisKey="nomeSquadra", OtherKey="nomeSquadra", IsForeignKey=true)]
		public iscrizione iscrizione
		{
			get
			{
				return this._iscrizione.Entity;
			}
			set
			{
				iscrizione previousValue = this._iscrizione.Entity;
				if (((previousValue != value) 
							|| (this._iscrizione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._iscrizione.Entity = null;
						previousValue.squadra.Remove(this);
					}
					this._iscrizione.Entity = value;
					if ((value != null))
					{
						value.squadra.Add(this);
						this._nomeSquadra = value.nomeSquadra;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("iscrizione");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="giocatore_squadra", Storage="_giocatore", ThisKey="nomeSquadra", OtherKey="nomeSquadra", IsForeignKey=true)]
		public giocatore giocatore
		{
			get
			{
				return this._giocatore.Entity;
			}
			set
			{
				giocatore previousValue = this._giocatore.Entity;
				if (((previousValue != value) 
							|| (this._giocatore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._giocatore.Entity = null;
						previousValue.squadra.Remove(this);
					}
					this._giocatore.Entity = value;
					if ((value != null))
					{
						value.squadra.Add(this);
						this._nomeSquadra = value.nomeSquadra;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("giocatore");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="allenatore_squadra", Storage="_allenatore", ThisKey="nomeSquadra", OtherKey="nomeSquadra", IsForeignKey=true)]
		public allenatore allenatore
		{
			get
			{
				return this._allenatore.Entity;
			}
			set
			{
				allenatore previousValue = this._allenatore.Entity;
				if (((previousValue != value) 
							|| (this._allenatore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._allenatore.Entity = null;
						previousValue.squadra.Remove(this);
					}
					this._allenatore.Entity = value;
					if ((value != null))
					{
						value.squadra.Add(this);
						this._nomeSquadra = value.nomeSquadra;
					}
					else
					{
						this._nomeSquadra = default(string);
					}
					this.SendPropertyChanged("allenatore");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="presidente_squadra", Storage="_presidente", ThisKey="CF_PRE", OtherKey="CF_PRE", IsForeignKey=true)]
		public presidente presidente
		{
			get
			{
				return this._presidente.Entity;
			}
			set
			{
				presidente previousValue = this._presidente.Entity;
				if (((previousValue != value) 
							|| (this._presidente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._presidente.Entity = null;
						previousValue.squadra.Remove(this);
					}
					this._presidente.Entity = value;
					if ((value != null))
					{
						value.squadra.Add(this);
						this._CF_PRE = value.CF_PRE;
					}
					else
					{
						this._CF_PRE = default(string);
					}
					this.SendPropertyChanged("presidente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_club1(club entity)
		{
			this.SendPropertyChanging();
			entity.squadra = this;
		}
		
		private void detach_club1(club entity)
		{
			this.SendPropertyChanging();
			entity.squadra = null;
		}
		
		private void attach_nazionale1(nazionale entity)
		{
			this.SendPropertyChanging();
			entity.squadra = this;
		}
		
		private void detach_nazionale1(nazionale entity)
		{
			this.SendPropertyChanging();
			entity.squadra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.stadio")]
	public partial class stadio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codStadio;
		
		private string _nomeStadio;
		
		private string _luogo;
		
		private int _capienza;
		
		private EntityRef<partita> _partita;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodStadioChanging(int value);
    partial void OncodStadioChanged();
    partial void OnnomeStadioChanging(string value);
    partial void OnnomeStadioChanged();
    partial void OnluogoChanging(string value);
    partial void OnluogoChanged();
    partial void OncapienzaChanging(int value);
    partial void OncapienzaChanged();
    #endregion
		
		public stadio()
		{
			this._partita = default(EntityRef<partita>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codStadio", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int codStadio
		{
			get
			{
				return this._codStadio;
			}
			set
			{
				if ((this._codStadio != value))
				{
					if (this._partita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodStadioChanging(value);
					this.SendPropertyChanging();
					this._codStadio = value;
					this.SendPropertyChanged("codStadio");
					this.OncodStadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeStadio", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nomeStadio
		{
			get
			{
				return this._nomeStadio;
			}
			set
			{
				if ((this._nomeStadio != value))
				{
					this.OnnomeStadioChanging(value);
					this.SendPropertyChanging();
					this._nomeStadio = value;
					this.SendPropertyChanged("nomeStadio");
					this.OnnomeStadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_luogo", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string luogo
		{
			get
			{
				return this._luogo;
			}
			set
			{
				if ((this._luogo != value))
				{
					this.OnluogoChanging(value);
					this.SendPropertyChanging();
					this._luogo = value;
					this.SendPropertyChanged("luogo");
					this.OnluogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capienza", DbType="Int NOT NULL")]
		public int capienza
		{
			get
			{
				return this._capienza;
			}
			set
			{
				if ((this._capienza != value))
				{
					this.OncapienzaChanging(value);
					this.SendPropertyChanging();
					this._capienza = value;
					this.SendPropertyChanged("capienza");
					this.OncapienzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="partita_stadio", Storage="_partita", ThisKey="codStadio", OtherKey="codStadio", IsForeignKey=true)]
		public partita partita
		{
			get
			{
				return this._partita.Entity;
			}
			set
			{
				partita previousValue = this._partita.Entity;
				if (((previousValue != value) 
							|| (this._partita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._partita.Entity = null;
						previousValue.stadio.Remove(this);
					}
					this._partita.Entity = value;
					if ((value != null))
					{
						value.stadio.Add(this);
						this._codStadio = value.codStadio;
					}
					else
					{
						this._codStadio = default(int);
					}
					this.SendPropertyChanged("partita");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="campionatocalcio.vittoria")]
	public partial class vittoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _codCoppa;
		
		private string _nomeSquadra;
		
		private EntitySet<squadra> _squadra;
		
		private EntitySet<coppa> _coppa;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodCoppaChanging(int value);
    partial void OncodCoppaChanged();
    partial void OnnomeSquadraChanging(string value);
    partial void OnnomeSquadraChanged();
    #endregion
		
		public vittoria()
		{
			this._squadra = new EntitySet<squadra>(new Action<squadra>(this.attach_squadra), new Action<squadra>(this.detach_squadra));
			this._coppa = new EntitySet<coppa>(new Action<coppa>(this.attach_coppa), new Action<coppa>(this.detach_coppa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codCoppa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int codCoppa
		{
			get
			{
				return this._codCoppa;
			}
			set
			{
				if ((this._codCoppa != value))
				{
					this.OncodCoppaChanging(value);
					this.SendPropertyChanging();
					this._codCoppa = value;
					this.SendPropertyChanged("codCoppa");
					this.OncodCoppaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeSquadra", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nomeSquadra
		{
			get
			{
				return this._nomeSquadra;
			}
			set
			{
				if ((this._nomeSquadra != value))
				{
					this.OnnomeSquadraChanging(value);
					this.SendPropertyChanging();
					this._nomeSquadra = value;
					this.SendPropertyChanged("nomeSquadra");
					this.OnnomeSquadraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vittoria_squadra", Storage="_squadra", ThisKey="nomeSquadra", OtherKey="nomeSquadra")]
		public EntitySet<squadra> squadra
		{
			get
			{
				return this._squadra;
			}
			set
			{
				this._squadra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vittoria_coppa", Storage="_coppa", ThisKey="codCoppa", OtherKey="codCoppa")]
		public EntitySet<coppa> coppa
		{
			get
			{
				return this._coppa;
			}
			set
			{
				this._coppa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.vittoria = this;
		}
		
		private void detach_squadra(squadra entity)
		{
			this.SendPropertyChanging();
			entity.vittoria = null;
		}
		
		private void attach_coppa(coppa entity)
		{
			this.SendPropertyChanging();
			entity.vittoria = this;
		}
		
		private void detach_coppa(coppa entity)
		{
			this.SendPropertyChanging();
			entity.vittoria = null;
		}
	}
}
#pragma warning restore 1591
